trigger:
  - dev
  - main

stages:
- stage: Build
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: "20.x"
      displayName: "Install Node.js"

    - script: |
        # Clean up node_modules and package-lock.json
        rm -rf node_modules package-lock.json
        
        # Install production dependencies
        npm install --omit=dev
        
        # Build the project
        npm run build
        
        # Create clean deploy directory
        mkdir -p deploy/dist
        
        # Copy only the build files
        cp -r dist/* deploy/dist/
        cp package.json deploy/
        cp web.config deploy/
        
        echo "Deploy directory contents:"
        ls -la deploy/
      displayName: 'Build and prepare deploy'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/deploy'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
      displayName: 'Archive Files'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: Deploy
    pool:
      vmImage: ubuntu-latest
    environment: 'staging'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'incident-reporting-system'
              appName: 'incident-report-system'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              deploymentMethod: 'zipDeploy'
