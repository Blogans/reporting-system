trigger:
  - dev
  - main

stages:
- stage: Build
  jobs:
  - job: BuildAndTest
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: "20.x"
      displayName: "Install Node.js"

    - script: |
        npm install
        npm run build
      displayName: "npm install and build"

    - script: |
        npm run test:ci
      displayName: "Run tests"
      continueOnError: true

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' 
        replaceExistingArchive: true
      displayName: 'Archive Files'

    - script: |
        echo "Archive created. Contents:"
        ls -la $(Build.ArtifactStagingDirectory)
        echo "Archive size:"
        du -sh $(Build.ArtifactStagingDirectory)/*
      displayName: 'Debug: Check artifact'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: DeployToStaging
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployToStaging
    pool:
      vmImage: ubuntu-latest
    environment: 'staging'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
          
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'incident-reporting-system'
              appName: 'incident-report-system'
              package: '$(System.ArtifactsDirectory)/**/*.zip'

- stage: DeployToProduction
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  jobs:
  - deployment: DeployToProduction
    pool:
      vmImage: ubuntu-latest
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'
          
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'incident-reporting-system'
              appName: 'incident-report-system'
              package: '$(System.ArtifactsDirectory)/**/*.zip'