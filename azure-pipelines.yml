trigger:
  branches:
    include:
    - main
    - develop

variables:
  azureSubscription: 'incident-report'  # Replace with your service connection name
  webAppName: 'incident-report'                      # Replace with your web app name
  environmentName: 'production'                       # Environment name
  vmImageName: 'windows-latest'                      # Agent VM image name
  nodeVersion: '18.x'                                     # Node.js version

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Install Node.js'

    # Install all dependencies and build
    - script: |
        npm install
        npm run build
      displayName: 'Install dependencies and build'

    # Create a temporary folder for deployment
    - script: |
        mkdir deployment
        cp -r dist deployment/
        cp -r node_modules deployment/
        cp web.config deployment/
        cp package.json deployment/
      displayName: 'Prepare deployment files'
      
    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/deployment'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true

    - task: PublishBuildArtifacts@1
      displayName: 'Publish artifacts'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: Deploy
    displayName: Deploy job
    environment: $(environmentName)
    pool:
      vmImage: $(vmImageName)
    strategy:
      runOnce:
        deploy:
          steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'drop'
              downloadPath: '$(System.ArtifactsDirectory)'

          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App'
            inputs:
              azureSubscription: $(azureSubscription)
              appName: $(webAppName)
              package: '$(System.ArtifactStagingDirectory)/drop/$(Build.BuildId).zip'
              appType: 'webApp'
              deploymentMethod: 'auto'